name: Update Version Data

on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed
    branches:
      - main  # Or your default branch name

permissions:
  contents: write  # Explicit permission to write to repository

# Special condition to prevent loops and apply changes properly
jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.filter.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - id: filter
        name: Check if version-data.js was the only file changed
        run: |
          git fetch origin
          # Print commits for debugging
          echo "Last few commits:"
          git log -n 3 --oneline
          
          # Get the commit message of the latest commit
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Latest commit message: $COMMIT_MSG"
          
          # Only skip if the commit message contains our marker
          if [[ "$COMMIT_MSG" == *"update version data [skip ci]"* ]]; then
            echo "This is an automated version update, skipping to prevent loops"
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "This is a regular commit, running version update"
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi
          
  update-version:
    needs: check_changes
    runs-on: ubuntu-latest
    if: ${{ needs.check_changes.outputs.should_run != 'false' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Need full history for commit count
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicit token with write permissions
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Generate version data
        run: |
          node generate-version-data.js
      
      - name: Commit and push if changed
        run: |
          git config --global user.name 'GitHub Action Bot'
          git config --global user.email 'action@github.com'
          git add js/version-data.js
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: update version data [skip ci]"
          git push
